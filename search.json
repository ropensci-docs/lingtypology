[{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing to lingtypology","text":"filing issue, important thing include minimal reproducible example can quickly verify problem. please include: required packages package versions data code additional information put issue template.","code":""},{"path":"https://docs.ropensci.org/lingtypology/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull requests","title":"Contributing to lingtypology","text":"contribute change lingtypology, follow steps: Create branch git make changes. add new function, forget put tests provide data contrubuter DESCRIPTION file. Push branch github issue pull request. Discuss pull request.","code":""},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"base-map","dir":"Articles","previous_headings":"","what":"1. Base map","title":"`lingtypology`: creating maps","text":"important part lingtypology package function map.feature. function allows produce maps similar known projects within Cross-Linguistic Linked Data philosophy, WALS Glottolog: shown picture , function generates interactive Leaflet map. specific points map pop-box appears markers clicked (see section 3.3 information editing pop-boxes). default, contain language names linked glottolog site. reasons using RStudio want automatically create save lot maps, can save map variable use htmlwidgets package saving created maps .html file. like thank Timo Roettger mentioning problem. export button RStudio, reason easy save map .png .jpg file using code. possible solution.","code":"map.feature(c(\"West Circassian\", \"Kabardian\", \"Polish\", \"Russian\", \"Bulgarian\")) m <- map.feature(c(\"West Circassian\", \"Korean\")) # install.packages(\"htmlwidgets\") library(htmlwidgets) saveWidget(m, file=\"TYPE_FILE_PATH/m.html\")"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"set-features","dir":"Articles","previous_headings":"","what":"2. Set features","title":"`lingtypology`: creating maps","text":"goal package allow typologists (linguists) map language features. list languages correspondent features can stored data.frame follows: Now can draw map: lot features appear legend senseless order(default ordered alphabetically), can reorderthem using factors (vector ordered levels, information see ?factor). example, want feature polysynthetic listed first, followed fusional: Like functions, necessary name arguments, result can obtained : shown picture , points grouped feature, colored counted. , pop-box appears markers clicked. control feature allows users toggle visibility points grouped feature. several types variables R map.feature works differently depending variable type. use build data set phonological_profiles contains 19 languages UPSyD database. dataset three variables: categorical variable ejectives indicates whether language ejective sound, numeric variables consonants vowels contains information number consonants vowels (based UPSyD database). can create two maps categorical variable numeric variable: main point creating correct map, correctly define type variable. dataset also can used show one parameter map.feature function. two possible ways show World map: Atlantic sea Pacific sea middle. don’t need default Pacific view use map.orientation parameter(thanks @languageSpaceLabs @tzakharko idea): Sometimes result image legend small. possible increase size legend using trick described . order assign map variable: Map appear, now can get calling variable m. order increase legend font one can use code like :","code":"df <- data.frame(language = c(\"West Circassian\", \"Kabardian\", \"Polish\", \"Russian\", \"Bulgarian\"),                features = c(\"polysynthetic\", \"polysynthetic\", \"fusional\", \"fusional\", \"fusional\")) df map.feature(languages = df$language,             features = df$features) df$features <- factor(df$features, levels = c(\"polysynthetic\", \"fusional\")) map.feature(languages = df$language, features = df$features) map.feature(df$language, df$features) map.feature(phonological_profiles$language,             phonological_profiles$ejectives) # categorical map.feature(phonological_profiles$language,             phonological_profiles$consonants) # numeric map.feature(phonological_profiles$language,             phonological_profiles$consonants,             map.orientation = \"Atlantic\") m <- map.feature(languages = df$language,                  features = df$features) library(htmltools) browsable(   tagList(     list(       tags$head(         tags$style(           \".leaflet .legend {                  line-height: 20px;                  font-size: 20px;                  }\",           \".leaflet .legend i{                 width: 20px;                 height: 20px;                  }\"         )       ),       m)))"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"set-pop-up-boxes","dir":"Articles","previous_headings":"","what":"3. Set pop-up boxes","title":"`lingtypology`: creating maps","text":"Sometimes good idea add additional information (e.g. language affiliation, references even examples) pop-boxes appear points clicked. order , first need create extra vector strings dataframe: function aff.lang() creates vector genealogical affiliations can easily mapped: Pop-strings can contain HTML tags, easy insert link, couple lines, table even video sound. pop-boxes can demonstrate language examples: say moon Sign Languages? example:","code":"df$popup <- aff.lang(df$language) map.feature(languages = df$language, features = df$features, popup = df$popup) # change a df$popup vector df$popup <- c(\"sɐ s-ɐ-k'ʷɐ<br> 1sg 1sg.abs-dyn-go<br>'I go'\",               \"sɐ s-o-k'ʷɐ<br> 1sg 1sg.abs-dyn-go<br>'I go'\",               \"id-ę<br> go-1sg.npst<br> 'I go'\",               \"ya id-u<br> 1sg go-1sg.npst <br> 'I go'\",               \"id-a<br> go-1sg.prs<br> 'I go'\") # create a map  map.feature(df$language,             features = df$features,             popup = df$popup) # Create a dataframe with links to video sign_df <- data.frame(languages = c(\"American Sign Language\", \"Russian-Tajik Sign Language\", \"French Sign Language\"),                       popup = c(\"https://media.spreadthesign.com/video/mp4/13/48600.mp4\", \"https://media.spreadthesign.com/video/mp4/12/17639.mp4\", \"https://media.spreadthesign.com/video/mp4/10/17638.mp4\"))  # Change popup to an HTML code sign_df$popup <- paste(\"<video width='200' height='150' controls> <source src='\",                        as.character(sign_df$popup),                        \"' type='video/mp4'><\/video>\", sep = \"\") # create a map map.feature(languages = sign_df$languages, popup = sign_df$popup)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"set-labels","dir":"Articles","previous_headings":"","what":"4. Set labels","title":"`lingtypology`: creating maps","text":"alternative way add short text map use label option. additional arguments customization: label.fsize setting font size, label.position controlling label position, label.hide control appearance label: TRUE, labels displayed mouse (previous map), FALSE, labels always displayed (next map). additional tool emphasis points map. argument label.emphasize allows emphasize selected points color specified user. example first vector list label.emphasize argument vector 2:4 produce elements 2, 3 4. can create youro wn selected rows. e. g. c(1, 3, 4). second vector list string color.","code":"map.feature(df$language, df$features,             label = df$language) map.feature(df$language, df$features,             label = df$language,             label.fsize = 20,             label.position = \"left\",             label.hide = FALSE) map.feature(df$language, df$features,             label = df$language,             label.fsize = 20,             label.position = \"left\",             label.hide = FALSE,             label.emphasize = list(2:4, \"red\"))"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"set-coordinates","dir":"Articles","previous_headings":"","what":"5. Set coordinates","title":"`lingtypology`: creating maps","text":"can set coordinates using arguments latitude longitude. important note, lingtypology works decimal degrees (something like : 0.1), degrees, minutes seconds (something like : 0° 06′ 0″). illustrate dataset circassian built lingtypology package. dataset comes fieldwork collected several expeditions period 2011-2016 contains list Circassian villages: dataframe can find variables latitude longitude used: possible collapse multiple dots clusters:","code":"head(circassian) map.feature(languages = circassian$language,             features = circassian$dialect,             popup = circassian$village,             latitude = circassian$latitude,             longitude = circassian$longitude) map.feature(languages = circassian$language,             features = circassian$dialect,             popup = circassian$village,             latitude = circassian$latitude,             longitude = circassian$longitude,              point.cluster = TRUE)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"set-colors","dir":"Articles","previous_headings":"","what":"6. Set colors","title":"`lingtypology`: creating maps","text":"can set colors using argument color: Arguments RColorBrewer viridis also can used color argument:","code":"df <- data.frame(language = c(\"West Circassian\", \"Kabardian\", \"Polish\", \"Russian\", \"Bulgarian\"),                  features = c(\"polysynthetic\", \"polysynthetic\", \"fusional\", \"fusional\", \"fusional\")) map.feature(languages = df$language,             features = df$features,             color= c(\"yellowgreen\", \"navy\")) map.feature(phonological_profiles$language,             phonological_profiles$consonants,             color= \"magma\")"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"set-shapes","dir":"Articles","previous_headings":"","what":"7. Set shapes","title":"`lingtypology`: creating maps","text":"scientific papers possible use colors destinguishing features. cases posible use shape argument: argument shape = TRUE works fine 6 less levels features variable. levels fetures argument, user need provide vector corresponding shapes: Arguments shape.size shape.color help change corresponding features markers.","code":"map.feature(languages = circassian$language,             features = circassian$language,             latitude = circassian$latitude,             longitude = circassian$longitude,             shape = TRUE) map.feature(languages = circassian$language,             features = circassian$dialect,             latitude = circassian$latitude,             longitude = circassian$longitude,             shape = 1:10,             shape.size = 14)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"set-control-box","dir":"Articles","previous_headings":"","what":"8. Set control box","title":"`lingtypology`: creating maps","text":"package can generate control box allows users toggle visibility points. enable , argument control map.feature function: can see control features arguments independent .","code":"map.feature(languages = df$language,             features = df$features,             control = c(\"a\", \"b\", \"b\", \"b\", \"a\"))"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"set-an-additional-set-of-features-using-strokes","dir":"Articles","previous_headings":"","what":"9. Set an additional set of features using strokes","title":"`lingtypology`: creating maps","text":"map.feature function additional argument stroke.features. Using argument becomes possible show two independent sets features one map. default strokes colored grey (two levels black white, three — black, grey, white ), can set colors using argument stroke.color: important note stroke.features can work NA values. function won’t plot anything NA value. Let’s set language value NA Baksan villages circassian dataset.","code":"map.feature(circassian$language,             features = circassian$dialect,             stroke.features = circassian$language,             latitude = circassian$latitude,             longitude = circassian$longitude) # create newfeature variable newfeature <- circassian[,c(5,6)] # set language feature of the Baksan villages to NA and reduce newfeature from dataframe to vector newfeature <- replace(newfeature$language, newfeature$language == \"Baksan\", NA) # create a map  map.feature(circassian$language,             features = circassian$dialect,             latitude = circassian$latitude,             longitude = circassian$longitude,             stroke.features = newfeature)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"set-width-and-an-opacity-feature","dir":"Articles","previous_headings":"","what":"10. Set width and an opacity feature","title":"`lingtypology`: creating maps","text":"markers width opacity, can set . Just use arguments width, stroke.radius, opacity stroke.opacity:","code":"map.feature(circassian$language,             features = circassian$dialect,             stroke.features = circassian$language,             latitude = circassian$latitude,             longitude = circassian$longitude,             width = 7, stroke.radius = 13)  map.feature(circassian$language,             features = circassian$dialect,             stroke.features = circassian$language,             latitude = circassian$latitude,             longitude = circassian$longitude,             opacity = 0.7, stroke.opacity = 0.6)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"customizing-legends","dir":"Articles","previous_headings":"","what":"11. Customizing legends","title":"`lingtypology`: creating maps","text":"default legend appears top right corner. stroke features, two legends generated. additional arguments control appearence title legends. arguments legend.position stroke.legend.position allow change legend’s position using “topright”, “bottomright”, “bottomleft” ”topleft” strings.","code":"map.feature(circassian$language,             features = circassian$dialect,             stroke.features = circassian$language,             latitude = circassian$latitude,             longitude = circassian$longitude,             legend = FALSE, stroke.legend = TRUE)  map.feature(circassian$language,             features = circassian$dialect,             stroke.features = circassian$language,             latitude = circassian$latitude,             longitude = circassian$longitude,             title = \"Circassian dialects\", stroke.title = \"Languages\")"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"set-scale-bar","dir":"Articles","previous_headings":"","what":"12. Set scale bar","title":"`lingtypology`: creating maps","text":"scale bar automatically added map, can control appearance (set scale.bar argument TRUE orFALSE) position (use scale.bar.position argument values “topright”, “bottomright”, “bottomleft” ”topleft”).","code":"map.feature(c(\"West Circassian\", \"Polish\", \"Kabardian\", \"Russian\"),             scale.bar= TRUE,             scale.bar.position = \"topright\")"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"set-layouts","dir":"Articles","previous_headings":"","what":"13. Set layouts","title":"`lingtypology`: creating maps","text":"possible use different tiles map using tile argument. tiles see . possible use different map tiles map. Just add vector tiles. possible name tiles using tile.name argument. possible combine tiles’ control box features’ control box.","code":"df <- data.frame(lang = c(\"West Circassian\", \"Kabardian\", \"Polish\", \"Russian\", \"Bulgarian\"),                  feature = c(\"polysynthetic\", \"polysynthetic\", \"fusion\", \"fusion\", \"fusion\"),                  popup = c(\"Adyghe\", \"Adyghe\", \"Slavic\", \"Slavic\", \"Slavic\"))  map.feature(df$lang, df$feature, df$popup,             tile = \"Esri.WorldGrayCanvas\") map.feature(df$lang, df$feature, df$popup,             tile = c(\"OpenStreetMap\", \"Esri.WorldGrayCanvas\")) map.feature(df$lang, df$feature, df$popup,             tile = c(\"OpenStreetMap\", \"Esri.WorldGrayCanvas\"),             tile.name = c(\"colored\", \"b & w\")) map.feature(df$lang, df$feature, df$popup,             tile = c(\"OpenStreetMap\", \"Esri.WorldGrayCanvas\"),             control = TRUE)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"add-a-minimap-to-a-map","dir":"Articles","previous_headings":"","what":"14. Add a minimap to a map","title":"`lingtypology`: creating maps","text":"possible add minimap map. can control appearance (setting minimap argument TRUE FALSE), position (using values “topright”, “bottomright”, “bottomleft” ”topleft” minimap.position argument) height width (arguments minimap.height minimap.width).","code":"map.feature(c(\"West Circassian\", \"Polish\", \"Kabardian\", \"Russian\"),             minimap = TRUE) map.feature(c(\"West Circassian\", \"Polish\", \"Kabardian\", \"Russian\"),             minimap = TRUE,             minimap.position = \"topright\",             minimap.height = 100,             minimap.width = 100)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"add-minicharts-instead-of-points","dir":"Articles","previous_headings":"","what":"15. Add minicharts instead of points","title":"`lingtypology`: creating maps","text":"part created using beutifull leaflet.minicharts library. argument minichart allows add piecharts barplots instead standard point markers. part use build data set phonological_profiles contains 19 languages UPSyD database. example barplot: example piechart: Colors opacity changed, legend moved: possible add values using argument minichart.labels: also possible use pie chart non-convenient way: just indicating TRUE FALSE pressence feature (thanks Diana Forker task!): Unfortunately kind visualisation doesn’t work, lines dataset contain FALSE values. non-convenient way category visualisation, visualisation experts negative opinion . kind visualisation also bad huge number variables.","code":"map.feature(languages = phonological_profiles$language,             minichart.data = phonological_profiles[, c(\"vowels\", \"consonants\")]) map.feature(languages = phonological_profiles$language,             minichart.data = phonological_profiles[, c(\"vowels\", \"consonants\")],             minichart = \"pie\") map.feature(languages = phonological_profiles$language,             minichart.data = phonological_profiles[, c(\"vowels\", \"consonants\")],             color= c(\"yellowgreen\", \"navy\"),             opacity = 0.7,             label = phonological_profiles$language,             legend.position = \"topleft\") map.feature(languages = phonological_profiles$language,             minichart.data = phonological_profiles[, c(\"vowels\", \"consonants\")],             minichart = \"pie\",             minichart.labels = TRUE) map.feature(languages = phonological_profiles$language,             minichart.data = phonological_profiles[, c(\"tone\", \"long_vowels\", \"stress\", \"ejectives\")],             minichart = \"pie\",              width = 3)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"add-a-rectangle-to-a-map","dir":"Articles","previous_headings":"","what":"16. Add a rectangle to a map","title":"`lingtypology`: creating maps","text":"possible highlight part map rectangle. need provide latitude longitude diagonal (rectangle.lat rectangel.lng) color rectangle (rectangle.color):","code":"map.feature(circassian$language,             circassian$language,             longitude = circassian$longitude,             latitude = circassian$latitude,             rectangle.lng = c(42.7, 45),             rectangle.lat = c(42.7, 44.4),             rectangle.color= \"green\")"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"add-a-density-contourplot-to-a-map","dir":"Articles","previous_headings":"","what":"17. Add a density contourplot to a map","title":"`lingtypology`: creating maps","text":"Sometimes easier look density contourplot. can created using density.estimation argument. two possibility creation density contourplot lingtypology: density.method = \"fixed distance\". First algorithm creates circle polygons fixed radius around point merge polygons overlapped. one parameter estimated: radius circle (density.width). density.method = \"kernal density estimation\". Second algorithm uses kernal density estimation two parameters estimated: latitude longitude bandwidths (density.width[1] (density.width[2])) Density estimation plot can separated features variable: possible remove points display kernal density estimation plot, using density.points argument: possible change kernal density estimation plot opacity using thedensity.estimation.opacity argument: want use kernal density estimation, need change method type provide vector parameters increase/decrease area: important note, type visualization shortcomings. kernel density estimation calculated without adjustment, longitude latitude values used values Cartesian coordinate system. reduce consequences solution better use different coordinate projection. allows treat Earth flat object.","code":"map.feature(circassian$language,             longitude = circassian$longitude,             latitude = circassian$latitude,             density.estimation = circassian$language,             density.width = 0.15) map.feature(circassian$language,             features = circassian$dialect,             longitude = circassian$longitude,             latitude = circassian$latitude,             density.estimation = circassian$language,             density.width = 0.15) map.feature(circassian$language,             longitude = circassian$longitude,             latitude = circassian$latitude,             density.estimation = circassian$language,             density.width = 0.15,             density.points = FALSE) map.feature(circassian$language,             longitude = circassian$longitude,             latitude = circassian$latitude,             density.estimation = circassian$language,             density.width = 0.15,             density.estimation.opacity = 0.2) map.feature(circassian$language,             features = circassian$language,             longitude = circassian$longitude,             latitude = circassian$latitude,             density.estimation = \"Circassian\",             density.method = \"kernal density estimation\",             density.width = c(0.3, 0.3),              color= c(\"darkgreen\", \"blue\")) map.feature(circassian$language,             features = circassian$language,             longitude = circassian$longitude,             latitude = circassian$latitude,             density.estimation = \"Circassian\",             density.method = \"kernal density estimation\",             density.width = c(0.7, 0.7),              color= c(\"darkgreen\", \"blue\")) map.feature(circassian$language,             features = circassian$language,             longitude = circassian$longitude,             latitude = circassian$latitude,             density.estimation = \"Circassian\",             density.method = \"kernal density estimation\",             density.width = c(1.3, 0.9),              color= c(\"darkgreen\", \"blue\"))"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"add-isoglosses","dir":"Articles","previous_headings":"","what":"18. Add isoglosses","title":"`lingtypology`: creating maps","text":"possible try catch isoglosses, using kernel density estimation algorithm. map.feature argument isogloss recieves dataframe set features: possible create true isoglosses hand, see tools .","code":"map.feature(languages = circassian$language,             latitude = circassian$latitude,             longitude = circassian$longitude,             features = circassian$dialect,             label = circassian$dialect,             legend = TRUE,             isogloss = as.data.frame(circassian[,\"dialect\"]),             isogloss.width = 0.15)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_creating_maps.html","id":"add-lines","dir":"Articles","previous_headings":"","what":"19. Add lines","title":"`lingtypology`: creating maps","text":"possible show lines map using coordinates (line.lng line.lat arguments). two coordinates, multiple lines appear. also possible change color line using line.color argument. two levels features variable, possible draw boundary line point clusters (logistic regression used calculation). possible add graticule map.","code":"map.feature(circassian$language,             features = circassian$language,             longitude = circassian$longitude,             latitude = circassian$latitude,             line.lng = c(39, 43),             line.lat = c(44.5, 43)) map.feature(circassian$language,             features = circassian$language,             longitude = circassian$longitude,             latitude = circassian$latitude,             line.lng = c(43, 39, 38.5),             line.lat = c(43, 44.5, 45),             line.color= \"green\") map.feature(circassian$language,             features = circassian$language,             longitude = circassian$longitude,             latitude = circassian$latitude,             line.type = \"logit\") map.feature(c(\"Russian\", \"West Circassian\"),             graticule = 5)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_db_API.html","id":"wals","dir":"Articles","previous_headings":"","what":"1. WALS","title":"`lingtypology`: Download typological databases' data","text":"names WALS features can typed lower case. function preserves coordinates WALS, can map coordinates WALS use coordinates lingtypology.","code":"df <- wals.feature(c(\"1a\", \"20a\")) head(df) map.feature(df$language,             features = df$`1a`,             latitude = df$latitude,             longitude = df$longitude,             label = df$language,             title = \"Consonant Inventories\")"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_db_API.html","id":"grambank","dir":"Articles","previous_headings":"","what":"2. Grambank","title":"`lingtypology`: Download typological databases' data","text":"names Grambank features can typed lower case. function preserves coordinates Grambank, can map coordinates WALS use coordinates lingtypology.","code":"df <- grambank.feature(c(\"gb026\", \"gb042\")) head(df) map.feature(df$grambank.name,             features = df$`GB042`,             latitude = df$latitude,             longitude = df$longitude,             label = df$language,             title = \"Is there productive overt morphological singular marking on nouns?\")"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_db_API.html","id":"autotyp","dir":"Articles","previous_headings":"","what":"3. AUTOTYP","title":"`lingtypology`: Download typological databases' data","text":"AUTOTYP features listed GitHub page. can use human way spaces. can also use module names order download variables module (e. g. Gender):","code":"df <- autotyp.feature(c('Has Gender', 'Has Numeral Classifiers')) head(df) map.feature(df$language,             features = df$HasNumeralClassifiers,             label = df$language_for_lingtypology,             title = \"Presence of Numeral Classifiers\")"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_db_API.html","id":"phoible","dir":"Articles","previous_headings":"","what":"4. PHOIBLE","title":"`lingtypology`: Download typological databases' data","text":"used four features PHOIBLE: number phonemes, number consonants, number tones number vowels. need set , just specify features argument. Since lot doubling information PHOIBLE database, argument source.","code":"df <- phoible.feature(source = \"UPSID\") head(df)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_db_API.html","id":"afbo","dir":"Articles","previous_headings":"","what":"5. AfBo","title":"`lingtypology`: Download typological databases' data","text":"AfBo database lot features distinguish affix functions, can use bare function without arguments download whole database. difference time, since function downloads whole database PC. main destinction database provides recipient donor languages, column names used.","code":"df <- afbo.feature(c(\"adjectivizer\", \"adverbializer\")) head(df) map.feature(df$Recipient.name,             features = df$adjectivizer,             label = df$Recipient.name,             title = \"Borrowed adjectivizer affixes\")"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_db_API.html","id":"sails","dir":"Articles","previous_headings":"","what":"6. SAILS","title":"`lingtypology`: Download typological databases' data","text":"SAILS database provide lot features, function work ids:","code":"df <- sails.feature(features = \"ics10\") head(df) map.feature(df$language,             features = df$ics10_description,             longitude = df$longitude,             latitude = df$latitude,             label = df$language,             title = \"Are there numeral classifiers?\")"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_db_API.html","id":"abvd","dir":"Articles","previous_headings":"","what":"7. ABVD","title":"`lingtypology`: Download typological databases' data","text":"ABVD database lexical database, different clld databases. First , ABVD language classification ids. information language different sources can received database different ids. select several languages map coloring word meaning ‘hand’.","code":"df <- abvd.feature(c(292, 7)) head(df) new_df <- df[df$word == \"hand\",] map.feature(new_df$language,             features = new_df$item,             label = new_df$language)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_db_API.html","id":"uralex","dir":"Articles","previous_headings":"","what":"8. UraLex","title":"`lingtypology`: Download typological databases' data","text":"uralex.feature downloads data UraLex basic vocabulary dataset. Original language names stored uralex.name variable. Converted language names map.feature stored language variable.","code":"df <- uralex.feature() df <- df[df$uralex_mng == \"crush\",]  map.feature(df$language,             label = df$item,             title = \"crush\")"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_dplyr.html","id":"dplyr-and-pipe","dir":"Articles","previous_headings":"","what":"1. dplyr and pipe |>","title":"`lingtypology` and other packages","text":"possible use dplyr functions pipes lingtypology. widely used, give examples, use thelingtypology package. Using query “list languages csv” found Vincent Garnier’s languages-list repository. Let’s download map languages set. First download data: see, values Language.name variable contain one language name. names probably different names database. Imagine want map languages Africa. following examples work correctly, use library(dplyr). start dataframe, new_data. First remove spaces end string. check, whether language names glottolog database. select rows contain languages Africa. select Language.name variable. last line maps selected languages. default, values came pipe treated first argument function. additional arguments, underline sign specify exact position piped . Let’s produce map minimap.","code":"new_data <- read.csv(\"https://goo.gl/GgscBE\") tail(new_data) library(dplyr) new_data |>    mutate(Language.name = gsub(pattern = \" \", replacement = \"\", Language.name)) |>     filter(is.glottolog(Language.name) == TRUE) |>     filter(area.lang(Language.name) == \"Africa\") |>     select(Language.name) |>    map.feature() new_data |>    mutate(Language.name = gsub(pattern = \" \", replacement = \"\", Language.name)) |>     filter(is.glottolog(Language.name) == TRUE) |>     filter(area.lang(Language.name) == \"Africa\") |>     select(Language.name) |>    map.feature(languages = _, minimap = TRUE)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_dplyr.html","id":"leaflet-leaflet-extras-mapview-mapedit","dir":"Articles","previous_headings":"","what":"2. leaflet, leaflet.extras, mapview, mapedit","title":"`lingtypology` and other packages","text":"also possibility use lingtypology leaflet functions (thanks Niko Partanen idea): add leaflet arguments befor map.feature function, need use argument pipe.data = _: usage pipe.data argument put variable leaflet object: want define tiles leaflet part, need change tile argument map.feature function, default value tile argument “OpenStreetMap.Mapnik”. also possible use tools provided leaflet.extras package: Also nice package mapedit provide possibility creating editing leaflet objects hand:","code":"library(leaflet) map.feature(c(\"French\", \"Occitan\")) |>    fitBounds(0, 40, 10, 50) |>    addPopups(2, 48, \"Great day!\") leaflet() %>%    fitBounds(0, 40, 10, 50) |>    addPopups(2, 48, \"Great day!\") |>    map.feature(c(\"French\", \"Occitan\"), pipe.data = _) m <- leaflet() |>    fitBounds(0, 40, 10, 50) |>    addPopups(2, 48, \"Great day!\")  map.feature(c(\"French\", \"Occitan\"), pipe.data = m) leaflet()  |>    addProviderTiles(\"Stamen.TonerLite\") |>    fitBounds(0, 40, 10, 50) |>    addPopups(2, 48, \"Great day!\") |>     map.feature(c(\"French\", \"Occitan\"), pipe.data = _, tile = \"none\") map.feature(c(\"French\", \"Occitan\")) |>    leaflet.extras::addDrawToolbar()  |>    leaflet.extras::addStyleEditor() map.feature(c(\"French\", \"Occitan\")) |>     leaflet.extras::addFullscreenControl() map.feature(c(\"West Circassian\", \"Russian\")) |>     mapedit::editMap() ->   my_polygone  map.feature(c(\"West Circassian\", \"Russian\")) |>     leaflet::addPolygons(data = my_polygone$finished)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_dplyr.html","id":"combining-maps-in-a-grid-and-facetisation-with-mapview","dir":"Articles","previous_headings":"","what":"3. Combining maps in a grid and facetisation with mapview","title":"`lingtypology` and other packages","text":"leafsync package provides possibility create multiple maps grid even synchronise . two functions : latticeview() sync(). Facetisation really powerfull tool (look facet_grid() facet_wrap() functions ggplot2). lingtypology doesn’t provide facetisation , facet argument map.feature() function create list maps based variable. result work function changed: instead creating map Viewer pane return list used latticeview() sync() functions leafsync package. can see provided circassian$language facet argument, returned list two maps stored faceted variable. also possible combine maps created, just store variable, combine latticeview() sync() functions","code":"faceted <- map.feature(circassian$language,                        latitude = circassian$latitude,                        longitude = circassian$longitude,                        features = circassian$dialect,                        facet = circassian$language) library(leafsync) sync(faceted, no.initial.sync = FALSE) m1 <- map.feature(lang.aff(\"Tsezic\"), label = lang.aff(\"Tsezic\")) m2 <- map.feature(lang.aff(\"Avar-Andi\"), label = lang.aff(\"Avar-Andi\")) sync(m1, m2)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_dplyr.html","id":"get-data-from-openstreetmap-with-overpass","dir":"Articles","previous_headings":"","what":"4. Get data from OpenStreetMap with overpass","title":"`lingtypology` and other packages","text":"section inspired talk Niko Partanen gist. Overpass packge tools work OpenStreetMap (OSM) Overpass API. Explore simple Overpass queries overpass turbo. Imagine need get settlements Ingushetia, Daghestan Chechnya. , first, load library: Create query: Pass query overpass_query() function change input result dataframe: values NA, profer clean complete.cases() function: last step, use “fake” language argument avoid creation Glottolog links: Results ideal: villages Дагестанская Красный Дагестан Adygeya Krasnodarskiy district, points correct. also possible get data polygone created mapedit (see previous section).","code":"library(overpass) settlements <- 'area[name~\"Дагестан|Ингушетия|Чечня\"]; (node[\"place\"~\"city|village|town|hamlet\"](area);); out;' query_result <- overpass_query(settlements) settlement_data <- as.data.frame(query_result[, c(\"id\", \"lon\", \"lat\", \"name\")]) settlement_data <- settlement_data[complete.cases(settlement_data),] map.feature(language = \"fake\",             latitude = settlement_data$lat,             longitude = settlement_data$lon,             label = settlement_data$name)"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_dplyr.html","id":"create-your-own-atlas-with-rmarkdown","dir":"Articles","previous_headings":"","what":"5. Create your own atlas with rmarkdown","title":"`lingtypology` and other packages","text":"section inspired talk Niko Partanen. possible create atlas website using lingtypology rmarkdown packages. function atlas.database() creates folder working directory contains rmarkdown template web-site. First, lets create dataframe data. Second can create website using atlas.database() function: languages argument language list features argument data.frame corresponding features latitude longitude arguments optional can see function creates subfolder following files: last step run command: atlas website created (result). want change something website, just change files: write information atlas index.Rmd file list citation information change .Rmd file … end rerun rmarkdown::render_site(\"./atlas_Some_WALS_features/\") command.","code":"df <- wals.feature(c(\"1a\", \"20a\")) atlas.database(languages = df$language,                features = df[,c(4:5)],                latitude = df$latitude,                longitude = df$longitude,                atlas.name = \"Some WALS features\",                author = \"Author Name\") list.files(\"./atlas_Some_WALS_features/\") rmarkdown::render_site(\"./atlas_Some_WALS_features/\")"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_dplyr.html","id":"create--kml-file-using-sp-and-rgdal","dir":"Articles","previous_headings":"","what":"6. Create .kml file using sp and rgdal","title":"`lingtypology` and other packages","text":".kml file common file type geospatial data. kind files used Google Earth, Gabmap (web application visualizes dialect variations) others. order produce .kml file need dataset coordinates circassian:","code":"sp::coordinates(circassian) <- ~longitude+latitude sp::proj4string(circassian) <- sp::CRS(\"+proj=longlat +datum=WGS84\") rgdal::writeOGR(circassian[\"village\"],                 \"circassian.kml\",                  layer=\"village\",                 driver=\"KML\")"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_glottolog_functions.html","id":"command-names-syntax","dir":"Articles","previous_headings":"","what":"1. Command name’s syntax","title":"`lingtypology`: Glottolog functions","text":"functions lingtypology syntax: need.. based language name. aff.lang() — get affiliation language area.lang() — get macro area language country.lang() — get country language iso.lang() — get ISO 639-3 code language gltc.lang() — get glottocode (identifier language Glottolog database) code language lat.lang() — get latitude language long.lang() — get longitude language level.lang() — get level language subc.lang() — get subclassification Newick tree format language help define vector languages. lang.aff() — get language affiliation lang.iso() — get language ISO 639-3 code lang.gltc() — get language glottocode Additionally functions convert glottocodes ISO 639-3 codes vice versa: gltc.iso() — get glottocode ISO 639-3 code iso.gltc() — get ISO 639-3 code glottocode important functionality lingtypology ability create interactive maps based features sets languages (see third section): map.feature() Glottolog database (v. 4.1) provides lingtypology language names, ISO codes, glottocodes, affiliation, macro area, coordinates, much information. set functions doesn’t goal cover possible combinations functions. Check additional information preserved version Glottolog database used lingtypology: Using R functions data manipulation can create database purpose.","code":"names(glottolog) ##  [1] \"glottocode\"        \"language\"          \"iso\"               ##  [4] \"level\"             \"area\"              \"latitude\"          ##  [7] \"longitude\"         \"countries\"         \"affiliation\"       ## [10] \"subclassification\""},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_glottolog_functions.html","id":"using-base-functions","dir":"Articles","previous_headings":"","what":"2. Using base functions","title":"`lingtypology`: Glottolog functions","text":"functions introduced previous section regular functions, can take following objects input: regular string like point can create strings R using single double quotes. Since inserting single quotes string created single quotes causes error R, use double quotes tutorial. can use single quotes, careful remember 'Ma'ya' incorrect string R. vector strings functions. example, let’s try get vector ISO codes Circassian languages new R, important mention can create table languages, features parametres spreadsheet software used work. can import created file R using standard tools.","code":"iso.lang(\"West Circassian\") ## West Circassian  ##           \"ady\" lang.iso(\"ady\") ##               ady  ## \"West Circassian\" lang.aff(\"Abkhaz-Adyge\") ## [1] \"Ubykh\"           \"Abkhaz\"          \"Abaza\"           \"West Circassian\" ## [5] \"Kabardian\" area.lang(c(\"Kabardian\", \"Aduge\")) ## Kabardian     Aduge  ## \"Eurasia\"  \"Africa\" lang <- c(\"Kabardian\", \"Russian\") aff.lang(lang) ##                                                                   Kabardian  ##                                                  \"Abkhaz-Adyge, Circassian\"  ##                                                                     Russian  ## \"Indo-European, Classical Indo-European, Balto-Slavic, Slavic, East Slavic\" iso.lang(lang.aff(\"Abkhaz-Adyge\")) ##           Ubykh          Abkhaz           Abaza West Circassian       Kabardian  ##           \"uby\"           \"abk\"           \"abq\"           \"ady\"           \"kbd\""},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_glottolog_functions.html","id":"spell-checker-look-carefully-at-warnings","dir":"Articles","previous_headings":"","what":"3. Spell Checker: look carefully at warnings!","title":"`lingtypology`: Glottolog functions","text":"functions take vector languages enriched kind spell checker. language query absent database, functions return warning message containing set candidates minimal Levenshtein distance language query.","code":"aff.lang(\"Kabardian\") ##                  Kabardian  ## \"Abkhaz-Adyge, Circassian\""},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_glottolog_functions.html","id":"subc-lang-function","dir":"Articles","previous_headings":"","what":"4. subc.lang() function","title":"`lingtypology`: Glottolog functions","text":"subc.lang() function returns language subclassification Newick tree format. format hard interpret , tools R make possible visualise subclassifications:  possible specify colors tips case want emphasize nodes:  can see nodes counted bottom top. sophisticated tree visualization can look ggtree package. several linguistic packages provide functionality creating glottolog trees: glottoTrees package Erich Round lingtypr package Laura Becker","code":"subc.lang(\"Lechitic\") ##                                                                                                                                             Lechitic  ## \"((Kashubian_Proper:1,Slovincian:1)kash1274:1,Polabian:1,((Great_Poland:1,Little_Poland:1,Old_Polish:1)poli1260:1,Silesian:1)poli1262:1)lech1241:1;\" library(ape) plot(read.tree(text = subc.lang(\"Lechitic\"))) plot(read.tree(text = subc.lang(\"Lechitic\")),      tip.color = c(\"red\", \"black\", \"black\", \"black\"))"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_intro.html","id":"what-is-lingtypology","dir":"Articles","previous_headings":"","what":"What is lingtypology?","title":"`lingtypology`: introduction and installation","text":"lingtypology package connects R Glottolog database (v. 4.8) provides additional functionality linguistic typology. Glottolog database contains catalogue world’s languages. package helps researchers make linguistic maps, using philosophy Cross-Linguistic Linked Data project, creating uniform access linguistic data across publications. package based leaflet package, lingtypology package interactive linguistic mapping. addition, package provides ability download data typological databases WALS, AUTOTYP others (see section 4). functionality package intersects lingtypology Python Michael Voronov; glottospace – R package geospatial analysis based Glottolog Sietze Norder et al; lingtypr – R package partially intersects lingtypology functionality Laura Becker; glottoTrees – R package visualising modifing glottolog trees Erich Round like thank Natalya Tyshkevich, Samira Verhees Eugenya Klyagina reading correcting versions vignette.","code":""},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_intro.html","id":"installation","dir":"Articles","previous_headings":"","what":"1. Installation","title":"`lingtypology`: introduction and installation","text":"Since lingtypology R package, install R (version >= 3.1.0) PC haven’t already done . install lingtypology package, run following command R IDE, get stable version CRAN: can also get development version GitHub: Load package:","code":"install.packages(\"lingtypology\", dependencies = TRUE) install.packages(\"remotes\") remotes::install_github(\"ropensci/lingtypology\") library(lingtypology) ## Based on the Glottolog v. 5.0"},{"path":"https://docs.ropensci.org/lingtypology/articles/lingtypology_intro.html","id":"citing-lingtyplogy","dir":"Articles","previous_headings":"","what":"2. Citing lingtyplogy","title":"`lingtypology`: introduction and installation","text":"important cite R R packages use . purpose use citation function:","code":"citation(\"lingtypology\") ## To cite package 'lingtypology' in publications use: ##  ##   Moroz G (2017). _lingtypology: easy mapping for Linguistic Typology_. ##   <https://CRAN.R-project.org/package=lingtypology>. ##  ## A BibTeX entry for LaTeX users is ##  ##   @Manual{, ##     title = {lingtypology: easy mapping for Linguistic Typology}, ##     author = {George Moroz}, ##     year = {2017}, ##     url = {https://CRAN.R-project.org/package=lingtypology}, ##   }"},{"path":"https://docs.ropensci.org/lingtypology/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"George Moroz. Author, maintainer. Kirill Koncha. Contributor. Mikhail Leonov. Contributor. Anna Smirnova. Contributor. Ekaterina Zalivina. Contributor.","code":""},{"path":"https://docs.ropensci.org/lingtypology/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moroz G (2017). lingtypology: easy mapping Linguistic Typology. https://CRAN.R-project.org/package=lingtypology.","code":"@Manual{,   title = {lingtypology: easy mapping for Linguistic Typology},   author = {George Moroz},   year = {2017},   url = {https://CRAN.R-project.org/package=lingtypology}, }"},{"path":"https://docs.ropensci.org/lingtypology/index.html","id":"lingtypology","dir":"","previous_headings":"","what":"Linguistic Typology and Mapping","title":"Linguistic Typology and Mapping","text":"lingtypology package connects R Glottolog database (v. 4.8) provides additional functionality linguistic mapping. Glottolog database contains catalogue world’s languages. package helps researchers make linguistic maps, using philosophy Cross-Linguistic Linked Data project, uniform access data across publications. package based leaflet package, lingtypology package package linguistic interactive mapping. also might interested looking alternatives lingtypology: lingtypology Python Michael Voronov; glottospace – R package geospatial analysis based Glottolog Sietze Norder et al; lingtypr – R package partially intersects lingtypology functionality Laura Becker; glottoTrees – R package visualising modifing glottolog trees Erich Round","code":""},{"path":"https://docs.ropensci.org/lingtypology/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Linguistic Typology and Mapping","text":"Get stable version CRAN: … get development version GitHub: Sometimes installation failed absence package crosstalk. Just install using command install.packages(\"crosstalk\"). Load library: detailed tutorial see GitHub pages. can contribute lingtypology, look contribution info .","code":"install.packages(\"lingtypology\") install.packages(\"remotes\") remotes::install_github(\"ropensci/lingtypology\") library(lingtypology)"},{"path":"https://docs.ropensci.org/lingtypology/reference/abvd.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download ABVD data — abvd.feature","title":"Download ABVD data — abvd.feature","text":"function downloads data ABVD (https://abvd.eva.mpg.de/austronesian/) changes language names names lingtypology database. need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/abvd.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download ABVD data — abvd.feature","text":"","code":"abvd.feature(feature)"},{"path":"https://docs.ropensci.org/lingtypology/reference/abvd.feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download ABVD data — abvd.feature","text":"feature character vector define language id ABVD (e. g. \"1\", \"292\").","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/abvd.feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download ABVD data — abvd.feature","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/abvd.feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download ABVD data — abvd.feature","text":"","code":"# abvd.feature(c(292, 7))"},{"path":"https://docs.ropensci.org/lingtypology/reference/abvd.html","id":null,"dir":"Reference","previous_headings":"","what":"ABVD's Language identifiers — abvd","title":"ABVD's Language identifiers — abvd","text":"Language identifiers ABVD (https://abvd.eva.mpg.de/austronesian/). dataset created abvd.feature function.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/abvd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ABVD's Language identifiers — abvd","text":"","code":"abvd"},{"path":"https://docs.ropensci.org/lingtypology/reference/abvd.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ABVD's Language identifiers — abvd","text":"data frame 1468 rows 2 variables: id language identifier glottocode Glottocode","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/afbo.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download AfBo data — afbo.feature","title":"Download AfBo data — afbo.feature","text":"function downloads data AfBo (https://afbo.info/) changes language names names lingtypology database. need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/afbo.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download AfBo data — afbo.feature","text":"","code":"afbo.feature(features = \"all\", na.rm = TRUE)"},{"path":"https://docs.ropensci.org/lingtypology/reference/afbo.feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download AfBo data — afbo.feature","text":"features character vector define affix functions AfBo (e. g. \"\", \"adjectivizer\", \"focus\"). na.rm Logical. TRUE function removes languages available lingtypology database. default TRUE.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/afbo.feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download AfBo data — afbo.feature","text":"","code":"# afbo.feature() # afbo.feature(c(\"adjectivizer\", \"adverbializer\"))"},{"path":"https://docs.ropensci.org/lingtypology/reference/aff.lang.html","id":null,"dir":"Reference","previous_headings":"","what":"Get affiliation by language — aff.lang","title":"Get affiliation by language — aff.lang","text":"Takes vector languages returns affiliation.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/aff.lang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get affiliation by language — aff.lang","text":"","code":"aff.lang(x)"},{"path":"https://docs.ropensci.org/lingtypology/reference/aff.lang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get affiliation by language — aff.lang","text":"x character vector languages (can written lower case)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/aff.lang.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get affiliation by language — aff.lang","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/aff.lang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get affiliation by language — aff.lang","text":"","code":"aff.lang('Korean') #>     Korean  #> \"Koreanic\"  aff.lang(c('Korean', 'Polish')) #>                                                                                                 Korean  #>                                                                                             \"Koreanic\"  #>                                                                                                 Polish  #> \"Indo-European, Classical Indo-European, Balto-Slavic, Slavic, West Slavic, Lechitic, Polish-Silesian\""},{"path":"https://docs.ropensci.org/lingtypology/reference/area.lang.html","id":null,"dir":"Reference","previous_headings":"","what":"Get macro area by language — area.lang","title":"Get macro area by language — area.lang","text":"Takes vector languages returns macro area.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/area.lang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get macro area by language — area.lang","text":"","code":"area.lang(x)"},{"path":"https://docs.ropensci.org/lingtypology/reference/area.lang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get macro area by language — area.lang","text":"x character vector languages (can written lower case)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/area.lang.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get macro area by language — area.lang","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/area.lang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get macro area by language — area.lang","text":"","code":"area.lang('Kabardian') #> Kabardian  #> \"Eurasia\"  area.lang(c('Kabardian', 'Aduge')) #> Kabardian     Aduge  #> \"Eurasia\"  \"Africa\""},{"path":"https://docs.ropensci.org/lingtypology/reference/atlas.database.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an atlas — atlas.database","title":"Create an atlas — atlas.database","text":"function creates rmarkdown based atlas data provided users. function creates template, rendered rmarkdown package. DT package required rendering.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/atlas.database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an atlas — atlas.database","text":"","code":"atlas.database(   languages,   latitude,   longitude,   features,   atlas.name = \"\",   author = \"\" )"},{"path":"https://docs.ropensci.org/lingtypology/reference/atlas.database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an atlas — atlas.database","text":"languages character vector languages (can written lower case) latitude numeric vector latitudes (optional) longitude numeric vector longitudes (optional) features dataframe column feature set atlas.name string atlas name author string authors list","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/autotyp.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download AUTOTYP data — autotyp.feature","title":"Download AUTOTYP data — autotyp.feature","text":"function downloads data AUTOTYP (https://github.com/autotyp/autotyp-data#-autotyp-database) changes language names names lingtypology database. need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/autotyp.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download AUTOTYP data — autotyp.feature","text":"","code":"autotyp.feature(features, na.rm = TRUE)"},{"path":"https://docs.ropensci.org/lingtypology/reference/autotyp.feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download AUTOTYP data — autotyp.feature","text":"features character vector define feature names AUTOTYP. na.rm Logical. TRUE function removes languages available lingtypology database. default TRUE.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/autotyp.feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download AUTOTYP data — autotyp.feature","text":"","code":"# autotyp.feature(c('Has Gender', 'Has Numeral Classifiers'))"},{"path":"https://docs.ropensci.org/lingtypology/reference/autotyp.html","id":null,"dir":"Reference","previous_headings":"","what":"AUTOTYP's Language identifiers — autotyp","title":"AUTOTYP's Language identifiers — autotyp","text":"Language identifiers AUTOTYP v. 1.1.1 (https://github.com/autotyp/autotyp-data/). dataset created autotyp.feature function.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/autotyp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AUTOTYP's Language identifiers — autotyp","text":"","code":"autotyp"},{"path":"https://docs.ropensci.org/lingtypology/reference/autotyp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AUTOTYP's Language identifiers — autotyp","text":"object class data.frame 1342 rows 3 columns.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/autotyp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AUTOTYP's Language identifiers — autotyp","text":"#' @format data frame 1342 rows 3 variables: path path dataset autotyp repo variable variable name file topic name","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/bantu.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download BANTU data — bantu.feature","title":"Download BANTU data — bantu.feature","text":"function downloads data Bantu Basic Vocabulary Database (https://abvd.eva.mpg.de/bantu/index.php) changes language names names lingtypology database. need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/bantu.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download BANTU data — bantu.feature","text":"","code":"bantu.feature(features)"},{"path":"https://docs.ropensci.org/lingtypology/reference/bantu.feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download BANTU data — bantu.feature","text":"features character vector define feature ids BANTU ('house', 'cat').","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/bantu.feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download BANTU data — bantu.feature","text":"Anna Smirnova <annedadaa@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/bantu.feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download BANTU data — bantu.feature","text":"","code":"# bantu.feature(c('house', 'cat'))"},{"path":"https://docs.ropensci.org/lingtypology/reference/bantu.html","id":null,"dir":"Reference","previous_headings":"","what":"BANTU's Language identifiers — bantu","title":"BANTU's Language identifiers — bantu","text":"Language identifiers BANTU (https://abvd.eva.mpg.de/bantu/index.php). dataset created bantu.feature function.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/bantu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BANTU's Language identifiers — bantu","text":"","code":"bantu"},{"path":"https://docs.ropensci.org/lingtypology/reference/bantu.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"BANTU's Language identifiers — bantu","text":"data frame 430 rows 2 variables: id BANTU word id word word","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/bivaltyp.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download BivalTyp data — bivaltyp.feature","title":"Download BivalTyp data — bivaltyp.feature","text":"function downloads data BivalTyp (https://www.bivaltyp.info/) changes language names names lingtypology database. need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/bivaltyp.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download BivalTyp data — bivaltyp.feature","text":"","code":"bivaltyp.feature()"},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/bivaltyp.feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download BivalTyp data — bivaltyp.feature","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/circassian.html","id":null,"dir":"Reference","previous_headings":"","what":"Circassian villages in Russia — circassian","title":"Circassian villages in Russia — circassian","text":"dataset containes list Circassian villages Russia genealogical affiliation, coordinates district names. data collected fieldworks (2011--2018).","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/circassian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circassian villages in Russia — circassian","text":"","code":"circassian"},{"path":"https://docs.ropensci.org/lingtypology/reference/circassian.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Circassian villages in Russia — circassian","text":"data frame 158 rows 6 variables: longitude longitude latitude latitude village name village district names subjects Russian Federation: kbr --- Kabardino--Balkar Republic, kch --- Karachay--Cherkess Republic, kk --- Krasnodar Krai, ra --- Republic Adygea, stv --- Stavropol Krai dialect names Circassian dialects language according standard Circassian devision West Circassian Kabardian languages","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/countries.html","id":null,"dir":"Reference","previous_headings":"","what":"Catalogue of countries — countries","title":"Catalogue of countries — countries","text":"Catalogue countries, ISO-codes official languages","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Catalogue of countries — countries","text":"","code":"countries"},{"path":"https://docs.ropensci.org/lingtypology/reference/countries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Catalogue of countries — countries","text":"data frame 189 rows 5 variables: alpha3 ISO 3166-3 code country alpha2 ISO 3166-2 code country country_name Country name additional_names Additional names country official_languages Official languages","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/country.lang.html","id":null,"dir":"Reference","previous_headings":"","what":"Get country by language — country.lang","title":"Get country by language — country.lang","text":"Takes vector languages returns countries languages used ISO 3166-1 alpha-2 codes.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/country.lang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get country by language — country.lang","text":"","code":"country.lang(x, full_name = TRUE)"},{"path":"https://docs.ropensci.org/lingtypology/reference/country.lang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get country by language — country.lang","text":"x character vector languages (can written lower case) full_name logical value, whether return ISO 3166-2 codes full names.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/country.lang.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get country by language — country.lang","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/country.lang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get country by language — country.lang","text":"","code":"country.lang('Korean') #>                                 Korean  #> \"China;South Korea;North Korea;Russia\"  country.lang(c('Korean', 'Polish')) #>                                          Korean  #>          \"China;South Korea;North Korea;Russia\"  #>                                          Polish  #> \"Belarus;Czech;Germany;Lithuania;Poland;Russia\""},{"path":"https://docs.ropensci.org/lingtypology/reference/eurasianphonology.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Opens data from the database of Eurasian phonological inventories — eurasianphonology.feature","title":"Opens data from the database of Eurasian phonological inventories — eurasianphonology.feature","text":"function opens downloaded data database Eurasian phonological inventories (https://eurphon.info).","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/eurasianphonology.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Opens data from the database of Eurasian phonological inventories — eurasianphonology.feature","text":"","code":"eurasianphonology.feature()"},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/eurasianphonology.feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Opens data from the database of Eurasian phonological inventories — eurasianphonology.feature","text":"Kirill Koncha <majortomblog@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/eurasianphonology.feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Opens data from the database of Eurasian phonological inventories — eurasianphonology.feature","text":"","code":"eurasianphonology.feature() #> Don't forget to cite a source: #>  #> Dmitry Nikolaev (ed.), Andrey Nikulin, Anton Kukhto. 2020. The database of Eurasian phonological inventories (beta version) (Available online at http://eurasianphonology.info, Accessed on ...) #> # A tibble: 19,825 × 19 #>    id     name    language iso   glottocode type  latitude longitude gen1  gen2  #>    <list> <chr>   <chr>    <chr> <chr>      <chr> <chr>    <chr>     <chr> <chr> #>  1 <chr>  Skolt … Skolt S… sms   skol1241   lang… 68.5     29.5      Ural… Saam… #>  2 <chr>  Skolt … Skolt S… sms   skol1241   lang… 68.5     29.5      Ural… Saam… #>  3 <chr>  Skolt … Skolt S… sms   skol1241   lang… 68.5     29.5      Ural… Saam… #>  4 <chr>  Skolt … Skolt S… sms   skol1241   lang… 68.5     29.5      Ural… Saam… #>  5 <chr>  Skolt … Skolt S… sms   skol1241   lang… 68.5     29.5      Ural… Saam… #>  6 <chr>  Skolt … Skolt S… sms   skol1241   lang… 68.5     29.5      Ural… Saam… #>  7 <chr>  Skolt … Skolt S… sms   skol1241   lang… 68.5     29.5      Ural… Saam… #>  8 <chr>  Skolt … Skolt S… sms   skol1241   lang… 68.5     29.5      Ural… Saam… #>  9 <chr>  Skolt … Skolt S… sms   skol1241   lang… 68.5     29.5      Ural… Saam… #> 10 <chr>  Skolt … Skolt S… sms   skol1241   lang… 68.5     29.5      Ural… Saam… #> # ℹ 19,815 more rows #> # ℹ 9 more variables: tones <chr>, syllab <chr>, cluster <chr>, finals <chr>, #> #   segments <chr>, segment_type <chr>, source <chr>, comment <chr>, #> #   contr <list>"},{"path":"https://docs.ropensci.org/lingtypology/reference/eurasianphonology.html","id":null,"dir":"Reference","previous_headings":"","what":"Eurasianphonology data — eurasianphonology","title":"Eurasianphonology data — eurasianphonology","text":"Data database Eurasian phonological inventories (https://eurphon.info). dataset created eurasianphonology.feature function.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/eurasianphonology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Eurasianphonology data — eurasianphonology","text":"","code":"eurasianphonology"},{"path":"https://docs.ropensci.org/lingtypology/reference/eurasianphonology.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Eurasianphonology data — eurasianphonology","text":"data frame 19825 rows 19 variables: id Language id iso ISO code name Another language name type Language dialect language Language name latitude latitude longitude longitude gen1 Language Family gen2 Language Family tones Inventory tones syllab Syllab structure cluster Cluster finals Finals source Source comment Comment contr Contributor segment_type Vowels consonants segments Segments glottocode Glottocode","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/frequency_list.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download frequency list — frequency_list.feature","title":"Download frequency list — frequency_list.feature","text":"function downloads frequency list OpenSubtitles2018 (https://opus.nlpl.eu/). need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/frequency_list.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download frequency list — frequency_list.feature","text":"","code":"frequency_list.feature(languages, list_type = \"full\")"},{"path":"https://docs.ropensci.org/lingtypology/reference/frequency_list.feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download frequency list — frequency_list.feature","text":"languages ISO 639-1 language code others ('ze_en', 'ze_zh', 'zh_cn', 'zh_tw', 'pt_br'). Possible values: 'af', 'ar', 'bg', 'bn', 'br', 'bs', 'ca', 'cs', 'da', 'de', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'gl', '', 'hi', 'hr', 'hu', 'hy', 'id', '', '', 'ja', 'ka', 'kk', 'ko', 'lt', 'lv', 'mk', 'ml', 'ms', 'nl', '', 'pl', 'pt', 'pt_br', 'ro', 'ru', 'si', 'sk', 'sl', 'sq', 'sr', 'sv', 'ta', 'te', 'tl', 'tr', 'uk', 'ur', 'vi', 'ze_en', 'ze_zh', 'zh_cn', 'zh_tw'. list_type Type frequency list. Possible values: 'full', '50k', 'ignored'. default full.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/frequency_list.feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download frequency list — frequency_list.feature","text":"Ekaterina Zalivina <zalivina01@mail.ru>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/frequency_list.feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download frequency list — frequency_list.feature","text":"","code":"# frequency_list.feature('ro') # frequency_list.feature('en', '50k') # frequency_list.feature(c('en', 'ru'), '50k')"},{"path":"https://docs.ropensci.org/lingtypology/reference/glottolog.html","id":null,"dir":"Reference","previous_headings":"","what":"Catalogue of languages of the world — glottolog","title":"Catalogue of languages of the world — glottolog","text":"dataset containes original catalogue languages world involving genealogical affiliation, macro-area, country, iso code, coordinates.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/glottolog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Catalogue of languages of the world — glottolog","text":"","code":"glottolog"},{"path":"https://docs.ropensci.org/lingtypology/reference/glottolog.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Catalogue of languages of the world — glottolog","text":"data frame 26879 rows 10 variables: glottocode languoid code Glottolog 5.0 language name language iso code based ISO 639--3 https://iso639-3.sil.org/ level languoid type: dialect language (possible values dialect, language, family, bookkeeping, pseudo family, sign language, unclassifiable, pidgin, unattested, artificial language, speech register, mixed language) area six values Africa, Australia, Eurasia, North America, Papunesia, South America latitude latitude longitude longitude countries list countries, language spoken affiliation genealogical affiliation subclassification subclassification Newick format","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/glottolog.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Catalogue of languages of the world — glottolog","text":"https://glottolog.org/","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/glottolog.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Catalogue of languages of the world — glottolog","text":"Hammarstrom, Harald Forkel, Robert Haspelmath, Martin Bank, Sebastian. 2023. Glottolog 5.0. Leipzig: Max Planck Institute Evolutionary Anthropology. https://doi.org/10.5281/zenodo.10804357 (Available online http://glottolog.org, Accessed 2024-03-12.)","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/gltc.iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Glottocode by ISO 639--3 code — gltc.iso","title":"Get Glottocode by ISO 639--3 code — gltc.iso","text":"Takes vector ISO 639--3 codes returns Glottocodes.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/gltc.iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Glottocode by ISO 639--3 code — gltc.iso","text":"","code":"gltc.iso(x)"},{"path":"https://docs.ropensci.org/lingtypology/reference/gltc.iso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Glottocode by ISO 639--3 code — gltc.iso","text":"x character vector Glottocodes.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/gltc.iso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Glottocode by ISO 639--3 code — gltc.iso","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/gltc.iso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Glottocode by ISO 639--3 code — gltc.iso","text":"","code":"gltc.iso('ady') #>        ady  #> \"adyg1241\"  gltc.iso(c('ady', 'rus')) #>        ady        rus  #> \"adyg1241\" \"russ1263\""},{"path":"https://docs.ropensci.org/lingtypology/reference/gltc.lang.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Glottocode by language — gltc.lang","title":"Get Glottocode by language — gltc.lang","text":"Takes vector languages returns Glottocode.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/gltc.lang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Glottocode by language — gltc.lang","text":"","code":"gltc.lang(x)"},{"path":"https://docs.ropensci.org/lingtypology/reference/gltc.lang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Glottocode by language — gltc.lang","text":"x character vector languages (can written lower case)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/gltc.lang.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Glottocode by language — gltc.lang","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/gltc.lang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Glottocode by language — gltc.lang","text":"","code":"gltc.lang('Kabardian') #>  Kabardian  #> \"kaba1278\"  gltc.lang(c('Kabardian', 'Udi')) #>  Kabardian        Udi  #> \"kaba1278\" \"udii1243\""},{"path":"https://docs.ropensci.org/lingtypology/reference/grambank.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Grambank data — grambank.feature","title":"Download Grambank data — grambank.feature","text":"function downloads data Grambank (https://grambank.clld.org/) changes language names names lingtypology database. need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/grambank.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Grambank data — grambank.feature","text":"","code":"grambank.feature(features, na.rm = TRUE)"},{"path":"https://docs.ropensci.org/lingtypology/reference/grambank.feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Grambank data — grambank.feature","text":"features character vector define feature ids Grambank (e. g. \"gb026\", \"gb042\"). na.rm Logical. TRUE function removes languages available lingtypology database. default TRUE.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/grambank.feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download Grambank data — grambank.feature","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/grambank.feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Grambank data — grambank.feature","text":"","code":"# grambank.feature(c(\"gb026\", \"gb042\"))"},{"path":"https://docs.ropensci.org/lingtypology/reference/imports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects imported from other packages — imports","title":"Objects imported from other packages — imports","text":"objects imported packages. Follow links documentation. magrittr %>%","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/is.glottolog.html","id":null,"dir":"Reference","previous_headings":"","what":"Are these languages in glottolog? — is.glottolog","title":"Are these languages in glottolog? — is.glottolog","text":"Takes vector languages ISO codes returns logical vector.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/is.glottolog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are these languages in glottolog? — is.glottolog","text":"","code":"is.glottolog(x, response = FALSE)"},{"path":"https://docs.ropensci.org/lingtypology/reference/is.glottolog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are these languages in glottolog? — is.glottolog","text":"x character vector languages (can written lower case)ISO codes response logical. TRUE, language absent, return warnings possible candidates.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/is.glottolog.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Are these languages in glottolog? — is.glottolog","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/is.glottolog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are these languages in glottolog? — is.glottolog","text":"","code":"is.glottolog(c('Kabardian', 'Russian')) #> [1] TRUE TRUE is.glottolog('Buyaka') #> [1] FALSE  if (FALSE) { # Add warning message with sugestions is.glottolog(c('Adyge', 'Russian'), response = TRUE) # > FALSE TRUE # Warning message: # In is.glottolog(c('Kabardia', 'Russian'), response = TRUE) : # Language Kabardia is absent in our version of the Glottolog database. # Did you mean Kabardian, Greater Kabardian? }"},{"path":"https://docs.ropensci.org/lingtypology/reference/iso.gltc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ISO 639--3 code by Glottocode — iso.gltc","title":"Get ISO 639--3 code by Glottocode — iso.gltc","text":"Takes vector Glotocodes returns ISO code.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/iso.gltc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ISO 639--3 code by Glottocode — iso.gltc","text":"","code":"iso.gltc(x)"},{"path":"https://docs.ropensci.org/lingtypology/reference/iso.gltc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ISO 639--3 code by Glottocode — iso.gltc","text":"x character vector Glottocodes.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/iso.gltc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get ISO 639--3 code by Glottocode — iso.gltc","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/iso.gltc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ISO 639--3 code by Glottocode — iso.gltc","text":"","code":"iso.gltc('adyg1241') #> adyg1241  #>    \"ady\"  iso.gltc(c('adyg1241', 'udii1243')) #> adyg1241 udii1243  #>    \"ady\"    \"udi\""},{"path":"https://docs.ropensci.org/lingtypology/reference/iso.lang.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ISO 639--3 code by language — iso.lang","title":"Get ISO 639--3 code by language — iso.lang","text":"Takes vector languages returns ISO code.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/iso.lang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ISO 639--3 code by language — iso.lang","text":"","code":"iso.lang(x)"},{"path":"https://docs.ropensci.org/lingtypology/reference/iso.lang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ISO 639--3 code by language — iso.lang","text":"x character vector languages (can written lower case)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/iso.lang.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get ISO 639--3 code by language — iso.lang","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/iso.lang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ISO 639--3 code by language — iso.lang","text":"","code":"iso.lang('Kabardian') #> Kabardian  #>     \"kbd\"  iso.lang(c('Kabardian', 'Udi')) #> Kabardian       Udi  #>     \"kbd\"     \"udi\""},{"path":"https://docs.ropensci.org/lingtypology/reference/iso3.iso1.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ISO 639-3 code from ISO 639-1 — iso3.iso1","title":"Get ISO 639-3 code from ISO 639-1 — iso3.iso1","text":"Takes vector ISO 639-1 codes returns ISO 639-3 code.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/iso3.iso1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ISO 639-3 code from ISO 639-1 — iso3.iso1","text":"","code":"iso3.iso1(x)"},{"path":"https://docs.ropensci.org/lingtypology/reference/iso3.iso1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ISO 639-3 code from ISO 639-1 — iso3.iso1","text":"x character vector ISO 639-3 codes.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/iso3.iso1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get ISO 639-3 code from ISO 639-1 — iso3.iso1","text":"Ekaterina Zalivina <zalivina01@mail.ru>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/iso3.iso1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ISO 639-3 code from ISO 639-1 — iso3.iso1","text":"","code":"iso3.iso1('bs') #>    bs  #> \"bos\"  iso3.iso1(c('co', 'it', 'ar')) #>    co    it    ar  #> \"cos\" \"ita\" \"ara\""},{"path":"https://docs.ropensci.org/lingtypology/reference/iso_639.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO 639-3 is a set of codes that defines three-letter identifiers for all known human languages. — iso_639","title":"ISO 639-3 is a set of codes that defines three-letter identifiers for all known human languages. — iso_639","text":"ISO 639 provides three language code sets: one two-letter code (ISO 639-1) two others three-letter codes (ISO 639-2 ISO 639-3) representation names languages. ISO 639-1 devised primarily use terminology, lexicography linguistics. ISO 639-2 devised primarily use terminology bibliography. ISO 639-3 devised provide comprehensive set identifiers languages use wide range applications, including linguistics, lexicography internationalization information systems. attempts represent known full languages.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/iso_639.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO 639-3 is a set of codes that defines three-letter identifiers for all known human languages. — iso_639","text":"","code":"iso_639"},{"path":"https://docs.ropensci.org/lingtypology/reference/iso_639.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ISO 639-3 is a set of codes that defines three-letter identifiers for all known human languages. — iso_639","text":"data frame 188 rows 5 variables: ISO_639_3 three-letter 639-3 identifier ISO_639_2_B Equivalent 639-2 identifier bibliographic applications code set ISO_639_2_T Equivalent 639-2 identifier terminology applications code set ISO_639_1 Equivalent 639-1 identifier Ref_Name Reference language name","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/iso_639.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ISO 639-3 is a set of codes that defines three-letter identifiers for all known human languages. — iso_639","text":"https://iso639-3.sil.org/","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/iso_639.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ISO 639-3 is a set of codes that defines three-letter identifiers for all known human languages. — iso_639","text":"(Available online https://iso639-3.sil.org/, Accessed 2022-05-23.)","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.aff.html","id":null,"dir":"Reference","previous_headings":"","what":"Get languages by affiliation — lang.aff","title":"Get languages by affiliation — lang.aff","text":"Takes vector affiliations returns languages.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.aff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get languages by affiliation — lang.aff","text":"","code":"lang.aff(x, include.dialects = FALSE, list = FALSE)"},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.aff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get languages by affiliation — lang.aff","text":"x character vector affiliations (can written lower case) include.dialects logical. TRUE, returns langauges dialects, FALSE returns languages. list logical. TRUE, returns list languages, FALSE returns named vector.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.aff.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get languages by affiliation — lang.aff","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.aff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get languages by affiliation — lang.aff","text":"","code":"lang.aff('Slavic') #>  [1] \"Old Prussian\"             \"Lithuanian\"               #>  [3] \"Latvian\"                  \"Belarusian\"               #>  [5] \"Old Russian\"              \"Russian\"                  #>  [7] \"Rusyn\"                    \"Ukrainian\"                #>  [9] \"Polabian\"                 \"Kashubian\"                #> [11] \"Czech\"                    \"Slovak\"                   #> [13] \"Upper Sorbian\"            \"Lower Sorbian\"            #> [15] \"Church Slavic\"            \"Serbian-Croatian-Bosnian\" #> [17] \"Kajkavian\"                \"Slavomolisano\"            #> [19] \"Slovenian\"                \"Polish\"                   #> [21] \"Silesian\"                 \"Macedonian\"               #> [23] \"Bulgarian\"                lang.aff(c('Slavic', 'Celtic')) #>  [1] \"Old Prussian\"             \"Lithuanian\"               #>  [3] \"Latvian\"                  \"Belarusian\"               #>  [5] \"Old Russian\"              \"Russian\"                  #>  [7] \"Rusyn\"                    \"Ukrainian\"                #>  [9] \"Polabian\"                 \"Kashubian\"                #> [11] \"Czech\"                    \"Slovak\"                   #> [13] \"Upper Sorbian\"            \"Lower Sorbian\"            #> [15] \"Church Slavic\"            \"Serbian-Croatian-Bosnian\" #> [17] \"Kajkavian\"                \"Slavomolisano\"            #> [19] \"Slovenian\"                \"Polish\"                   #> [21] \"Silesian\"                 \"Macedonian\"               #> [23] \"Bulgarian\"                \"Celtiberian\"              #> [25] \"Cisalpine Gaulish\"        \"Lepontic\"                 #> [27] \"Transalpine Gaulish\"      \"Noric\"                    #> [29] \"Galatian\"                 \"Early Irish\"              #> [31] \"Irish\"                    \"Welsh\"                    #> [33] \"Old-Middle Welsh\"         \"Old Cornish\"              #> [35] \"Scottish Gaelic\"          \"Manx\"                     #> [37] \"Breton\"                   \"Cornish\"                  lang.aff(c('Slavic', 'Celtic'), list = TRUE) #> [[1]] #>  [1] \"Old Prussian\"             \"Lithuanian\"               #>  [3] \"Latvian\"                  \"Belarusian\"               #>  [5] \"Old Russian\"              \"Russian\"                  #>  [7] \"Rusyn\"                    \"Ukrainian\"                #>  [9] \"Polabian\"                 \"Kashubian\"                #> [11] \"Czech\"                    \"Slovak\"                   #> [13] \"Upper Sorbian\"            \"Lower Sorbian\"            #> [15] \"Church Slavic\"            \"Serbian-Croatian-Bosnian\" #> [17] \"Kajkavian\"                \"Slavomolisano\"            #> [19] \"Slovenian\"                \"Polish\"                   #> [21] \"Silesian\"                 \"Macedonian\"               #> [23] \"Bulgarian\"                #>  #> [[2]] #>  [1] \"Celtiberian\"         \"Cisalpine Gaulish\"   \"Lepontic\"            #>  [4] \"Transalpine Gaulish\" \"Noric\"               \"Galatian\"            #>  [7] \"Early Irish\"         \"Irish\"               \"Welsh\"               #> [10] \"Old-Middle Welsh\"    \"Old Cornish\"         \"Scottish Gaelic\"     #> [13] \"Manx\"                \"Breton\"              \"Cornish\"             #>"},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.country.html","id":null,"dir":"Reference","previous_headings":"","what":"Get language by country — lang.country","title":"Get language by country — lang.country","text":"Takes vector countries returns languages.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.country.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get language by country — lang.country","text":"","code":"lang.country(x, list = TRUE)"},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.country.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get language by country — lang.country","text":"x character vector countries (alpha-2 ISO codes) list logical. TRUE, returns list languages, FALSE returns named vector.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.country.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get language by country — lang.country","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.country.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get language by country — lang.country","text":"","code":"lang.country('AD') #> $AD #> [1] \"Catalan\"    \"Occitan\"    \"Spanish\"    \"Portuguese\" \"French\"     #>  lang.country(c('AD', 'AE')) #> $AD #> [1] \"Catalan\"    \"Occitan\"    \"Spanish\"    \"Portuguese\" \"French\"     #>  #> $AE #> [1] \"Soqotri\"         \"Standard Arabic\" \"Omani Arabic\"    \"Najdi Arabic\"    #> [5] \"Gulf Arabic\"     \"Ru'us al-Jibal\"  #>"},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.gltc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get language by Glottocode — lang.gltc","title":"Get language by Glottocode — lang.gltc","text":"Takes vector Glottocodes returns languages.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.gltc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get language by Glottocode — lang.gltc","text":"","code":"lang.gltc(x)"},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.gltc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get language by Glottocode — lang.gltc","text":"x character vector Glottocodes.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.gltc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get language by Glottocode — lang.gltc","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.gltc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get language by Glottocode — lang.gltc","text":"","code":"lang.gltc('adyg1241') #>          adyg1241  #> \"West Circassian\"  lang.gltc(c('adyg1241', 'udii1243')) #>          adyg1241          udii1243  #> \"West Circassian\"             \"Udi\""},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Get language by ISO 639--3 code — lang.iso","title":"Get language by ISO 639--3 code — lang.iso","text":"Takes vector ISO codes returns languages.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get language by ISO 639--3 code — lang.iso","text":"","code":"lang.iso(x)"},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.iso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get language by ISO 639--3 code — lang.iso","text":"x character vector ISO codes.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.iso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get language by ISO 639--3 code — lang.iso","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/lang.iso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get language by ISO 639--3 code — lang.iso","text":"","code":"lang.iso('ady') #>               ady  #> \"West Circassian\"  lang.iso(c('ady', 'rus')) #>               ady               rus  #> \"West Circassian\"         \"Russian\""},{"path":"https://docs.ropensci.org/lingtypology/reference/lat.lang.html","id":null,"dir":"Reference","previous_headings":"","what":"Get latitude by language — lat.lang","title":"Get latitude by language — lat.lang","text":"Takes vector languages returns latitude.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/lat.lang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get latitude by language — lat.lang","text":"","code":"lat.lang(x)"},{"path":"https://docs.ropensci.org/lingtypology/reference/lat.lang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get latitude by language — lat.lang","text":"x character vector languages (can written lower case)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/lat.lang.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get latitude by language — lat.lang","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/lat.lang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get latitude by language — lat.lang","text":"","code":"lat.lang('Kabardian') #> Kabardian  #>   43.5082  long.lang('Kabardian') #> Kabardian  #>   43.3918  lat.lang(c('Kabardian', 'Russian')) #> Kabardian   Russian  #>   43.5082   59.0000  long.lang(c('Kabardian', 'Russian')) #> Kabardian   Russian  #>   43.3918   50.0000"},{"path":"https://docs.ropensci.org/lingtypology/reference/level.lang.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a level of language by language — level.lang","title":"Get a level of language by language — level.lang","text":"Takes vector languages returns level language.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/level.lang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a level of language by language — level.lang","text":"","code":"level.lang(x)"},{"path":"https://docs.ropensci.org/lingtypology/reference/level.lang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a level of language by language — level.lang","text":"x character vector languages (can written lower case)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/level.lang.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get a level of language by language — level.lang","text":"Sasha Shakhnova","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/level.lang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a level of language by language — level.lang","text":"","code":"level.lang('Russian Sign Language') #> Russian Sign Language  #>             \"dialect\"  level.lang(c('Archi', 'Chechen')) #>      Archi    Chechen  #> \"language\" \"language\""},{"path":"https://docs.ropensci.org/lingtypology/reference/long.lang.html","id":null,"dir":"Reference","previous_headings":"","what":"Get longitude by language — long.lang","title":"Get longitude by language — long.lang","text":"Takes vector languages returns longitude.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/long.lang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get longitude by language — long.lang","text":"","code":"long.lang(x, map.orientation = \"Pacific\")"},{"path":"https://docs.ropensci.org/lingtypology/reference/long.lang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get longitude by language — long.lang","text":"x character vector languages (can written lower case) map.orientation character verctor values \"Pacific\" \"Atlantic\". distinguishes Pacific-centered Atlantic-centered maps. default \"Pacific\".","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/long.lang.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get longitude by language — long.lang","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/long.lang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get longitude by language — long.lang","text":"","code":"lat.lang('Kabardian') #> Kabardian  #>   43.5082  long.lang('Kabardian') #> Kabardian  #>   43.3918  lat.lang(c('Kabardian', 'Russian')) #> Kabardian   Russian  #>   43.5082   59.0000  long.lang(c('Kabardian', 'Russian')) #> Kabardian   Russian  #>   43.3918   50.0000  long.lang(c('Kabardian', 'Aleut'), map.orientation = \"Pacific\") #> Kabardian     Aleut  #>   43.3918  185.7100"},{"path":"https://docs.ropensci.org/lingtypology/reference/map.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a map — map.feature","title":"Create a map — map.feature","text":"Map set languages color feature two sets features.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/map.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a map — map.feature","text":"","code":"map.feature(   languages,   features = \"\",   label = \"\",   popup = \"\",   latitude = NA,   longitude = NA,   label.hide = TRUE,   label.fsize = 15,   label.font = \"sans-serif\",   label.position = \"right\",   label.emphasize = list(NULL, \"black\"),   shape = NULL,   shape.size = 20,   pipe.data = NULL,   shape.color = \"black\",   stroke.features = NULL,   point.cluster = FALSE,   density.estimation = NULL,   density.method = \"fixed distance\",   density.estimation.color = NULL,   density.estimation.opacity = 0.6,   density.points = TRUE,   density.width = NULL,   density.legend = TRUE,   density.legend.opacity = 1,   density.legend.position = \"bottomleft\",   density.title = \"\",   density.control = FALSE,   isogloss = NULL,   isogloss.color = \"black\",   isogloss.opacity = 0.2,   isogloss.line.width = 3,   isogloss.width = NULL,   color = NULL,   stroke.color = NULL,   image.url = NULL,   image.width = 100,   image.height = 100,   image.X.shift = 0,   image.Y.shift = 0,   title = NULL,   stroke.title = NULL,   control = \"\",   legend = TRUE,   legend.opacity = 1,   legend.position = \"topright\",   stroke.legend = TRUE,   stroke.legend.opacity = 1,   stroke.legend.position = \"bottomleft\",   width = 5,   stroke.radius = 9.5,   opacity = 1,   stroke.opacity = 1,   scale.bar = TRUE,   scale.bar.position = \"bottomleft\",   minimap = FALSE,   minimap.position = \"bottomright\",   minimap.width = 150,   minimap.height = 150,   facet = NULL,   tile = \"OpenStreetMap.Mapnik\",   tile.name = NULL,   tile.opacity = 1,   zoom.control = FALSE,   zoom.level = NULL,   rectangle.lng = NULL,   rectangle.lat = NULL,   rectangle.color = \"black\",   line.lng = NULL,   line.lat = NULL,   line.type = \"standard\",   line.color = \"black\",   line.opacity = 0.8,   line.label = NULL,   line.width = 3,   graticule = NULL,   minichart = \"bar\",   minichart.data = NULL,   minichart.time = NULL,   minichart.labels = FALSE,   map.orientation = \"Pacific\",   radius = NULL )"},{"path":"https://docs.ropensci.org/lingtypology/reference/map.feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a map — map.feature","text":"languages character vector languages (can written lower case) features character vector features label character vector strings appear near points popup character vector strings appear pop-window latitude numeric vector latitudes longitude numeric vector longitudes label.hide logical. FALSE, labels displayed allways. TRUE, labels displayed mouse . default TRUE. label.fsize numeric value label font size. default 14. label.font string values generic family: \"serif\", \"sans-serif\", \"monospace\", font name e. g. \"Times New Roman\" label.position position labels: \"left\", \"right\", \"top\", \"bottom\" label.emphasize list. First argument vector points datframe emphasized. Second argument string color emphasis. shape TRUE, creates icons (five categories) values features variable; also vector strings represents levels  features variable; also string vector represents number observations dataset. shape.size size shape icons pipe.data variable important, use map.feature dplyr pipes. Expected usage: pipe.data = . shape.color color shape icons stroke.features additional independent stroke features point.cluster logical. TRUE, points united clusters. density.estimation additional independent features, used density estimation density.method string one two methods: \"kernal density estimation\" \"fixed distance\" (default) density.estimation.color vector density polygons' colors density.estimation.opacity numeric vector density polygons opacity. density.points logical. FALSE, show points polygones. density.width density.method = \"fixed distance\" numeric measure (1 1km). density.method = \"kernal density estimation\" vector two meausures (first latitude, secong longitude). Defaults normal reference bandwidth (see bandwidth.nrd). density.legend logical. TRUE, function show legend density features. default FALSE. density.legend.opacity numeric vector density-legend opacity. density.legend.position position legend: \"topright\", \"bottomright\", \"bottomleft\",\"topleft\" density.title title density-feature legend density.control logical. TRUE, function show layer control buttons density plot. default FALSE isogloss dataframe corresponding features isogloss.color vector isoglosses' colors isogloss.opacity numeric vector density polygons opacity. isogloss.line.width numeric value line width isogloss.width density.method = \"fixed distance\" numeric measure (1 1km). density.method = \"kernal density estimation\" vector two meausures (first latitude, secong longitude). Defaults normal reference bandwidth (see bandwidth.nrd). color vector colors palette. color argument can (1) character vector RGM named colors; (2) name RColorBrewer palette; (3) full name viridis palette; (4) function receives single value 0 1 returns color. examples see colorNumeric stroke.color vector stroke colors image.url character vector URLs images image.width numeric vector image widths image.height numeric vector image heights image.X.shift numeric vector image's X axis shift relative latitude-longitude point image.Y.shift numeric vector image's Y axis shift relative latitude-longitude point title title legend. stroke.title title stroke-feature legend. control vector grouping values make possible create control panel can turn /points map. legend logical. TRUE, function show legend. default TRUE. legend.opacity numeric vector legend opacity. legend.position position legend: \"topright\", \"bottomright\", \"bottomleft\",\"topleft\" stroke.legend logical. TRUE, function show stroke.legend. default FALSE. stroke.legend.opacity numeric vector stroke.legend opacity. stroke.legend.position position stroke.legend: \"topright\", \"bottomright\", \"bottomleft\",\"topleft\" width numeric vector radius circles width barcharts minicharts. stroke.radius numeric vector stroke radii circles. opacity numeric vector marker opacity. stroke.opacity numeric vector stroke opacity. scale.bar logical. TRUE, function shows scale-bar. default TRUE. scale.bar.position position scale-bar: \"topright\", \"bottomright\", \"bottomleft\",\"topleft\" minimap logical. TRUE, function shows mini map. default FALSE. minimap.position position minimap: \"topright\", \"bottomright\", \"bottomleft\",\"topleft\" minimap.width width minimap pixels. minimap.height height minimap pixels. facet character vector provide grouping variable. NULL, result list leaflets sync latticeView functions mapview package returned. tile character verctor map tiles, popularized Google Maps. See complete set. tile.name character verctor user's map tiles' names. tile.opacity numeric value 0 1 denoting opacity tile. zoom.control logical. TRUE, function shows zoom controls. default FALSE. zoom.level numeric value zoom level. rectangle.lng vector two longitude values rectangle. rectangle.lat vector two latitude values rectangle. rectangle.color vector rectangle border color. line.lng vector two () longitude values line. line.lat vector two () latitude values line. line.type character string indicating type line computed. One \"standard\" (default), \"logit\". first one combined arguments line.lat line.lng provide simple lines. variant \"logit\" decision boundary logistic regression made using longitude latitude coordinates (works feature argument two levels). line.color vector line color. line.opacity numeric vector line opacity. line.label character vector appear near line. line.width numeric vector line width. graticule numeric vector graticule spacing map units horizontal vertical lines. minichart citation leaflet.minicharts package: \"Possible values \"bar\" bar charts, \"pie\" pie charts, \"polar-area\" \"polar-radius\".\" minichart.data citation leaflet.minicharts package: \"numeric matrix number rows equal number elements lng lat number column equal number variables represent. parameter time set, number rows must equal length lng times number unique time steps data.\" minichart.time citation leaflet.minicharts package: \"vector length equal number rows chartdata containing either numbers representing time indices dates datetimes. unique value must appear many times others. parameter can used one wants represent evolution variables map.\" minichart.labels citation leaflet.minicharts package: \"values displayed chart elements.\" map.orientation character verctor values \"Pacific\" \"Atlantic\". distinguishes Pacific-centered Atlantic-centered maps. default \"Pacific\". radius deprecated argument","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/map.feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a map — map.feature","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/map.feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a map — map.feature","text":"","code":"map.feature(c(\"Kabardian\", \"Russian\"))  {\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"zoomControl\":false},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"OpenStreetMap.Mapnik\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap.Mapnik\",null,\"OpenStreetMap.Mapnik\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"opacity\":1,\"detectRetina\":false}]},{\"method\":\"addCircleMarkers\",\"args\":[[43.5082,59],[43.3918,50],5,null,[\"\",\"\"],{\"interactive\":true,\"className\":\"\",\"stroke\":false,\"color\":\"#03F\",\"weight\":1,\"opacity\":0.5,\"fill\":true,\"fillColor\":[\"#3B8BC6\",\"#3B8BC6\"],\"fillOpacity\":1},null,null,[\"<a href='https://glottolog.org/resource/languoid/id/kaba1278' target='_blank'>Kabardian<\\/a><br>\",\"<a href='https://glottolog.org/resource/languoid/id/russ1263' target='_blank'>Russian<\\/a><br>\"],null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"right\",\"opacity\":1,\"offset\":[7.5,0],\"textsize\":\"10px\",\"textOnly\":true,\"style\":{\"font-size\":\"15px\",\"font-family\":\"sans-serif\"},\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]}],\"limits\":{\"lat\":[43.5082,59],\"lng\":[43.3918,50]}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://docs.ropensci.org/lingtypology/reference/oto_mangueanIC.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Oto-Manguean Inflectional Class Database data — oto_mangueanIC.feature","title":"Download Oto-Manguean Inflectional Class Database data — oto_mangueanIC.feature","text":"function downloads data Oto-Manguean Inflectional Class Database (https://oto-manguean.surrey.ac.uk/) creates language column names lingtypology database. need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/oto_mangueanIC.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Oto-Manguean Inflectional Class Database data — oto_mangueanIC.feature","text":"","code":"oto_mangueanIC.feature()"},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/oto_mangueanIC.feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download Oto-Manguean Inflectional Class Database data — oto_mangueanIC.feature","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/oto_mangueanIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Oto-Manguean Inflectional Class Database Language identifiers — oto_mangueanIC","title":"Oto-Manguean Inflectional Class Database Language identifiers — oto_mangueanIC","text":"Language identifiers Oto-Manguean Inflectional Class Database (https://oto-manguean.surrey.ac.uk/). dataset created oto_mangueanIC.feature function.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/oto_mangueanIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Oto-Manguean Inflectional Class Database Language identifiers — oto_mangueanIC","text":"","code":"oto_mangueanIC"},{"path":"https://docs.ropensci.org/lingtypology/reference/oto_mangueanIC.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Oto-Manguean Inflectional Class Database Language identifiers — oto_mangueanIC","text":"object class tbl_df (inherits tbl, data.frame) 20 rows 2 columns.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/oto_mangueanIC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Oto-Manguean Inflectional Class Database Language identifiers — oto_mangueanIC","text":"#' @format data frame 20 rows 2 variables: Language.name Languaeg names Oto-Manguean Inflectional Class Database language Language names Glottolog database","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/phoible.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download PHOIBLE data — phoible.feature","title":"Download PHOIBLE data — phoible.feature","text":"function downloads data PHOIBLE (https://phoible.org/) changes language names names lingtypology database. need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/phoible.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download PHOIBLE data — phoible.feature","text":"","code":"phoible.feature(source = \"all\", na.rm = TRUE)"},{"path":"https://docs.ropensci.org/lingtypology/reference/phoible.feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download PHOIBLE data — phoible.feature","text":"source character vector define source names PHOIBLE (possible values: \"\", \"aa\", \"gm\", \"ph\", \"ra\", \"saphon\", \"spa\", \"upsid\"). na.rm Logical. TRUE function removes languages available lingtypology database. default TRUE.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/phoible.feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download PHOIBLE data — phoible.feature","text":"","code":"# phoible.feature() # phoible.feature(c('consonants', 'vowels'), source = \"UPSID\")"},{"path":"https://docs.ropensci.org/lingtypology/reference/phoible.html","id":null,"dir":"Reference","previous_headings":"","what":"Phoible glottolog - language correspondencies — phoible","title":"Phoible glottolog - language correspondencies — phoible","text":"Language correspondencies Phoible (https://phoible.org/). dataset created phoible.feature function.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/phoible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phoible glottolog - language correspondencies — phoible","text":"","code":"phoible"},{"path":"https://docs.ropensci.org/lingtypology/reference/phoible.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Phoible glottolog - language correspondencies — phoible","text":"data frame 2185 rows 2 variables: language language Glottocode Glottocode","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/phonological_profiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of consonants and presence of ejectives — phonological_profiles","title":"Number of consonants and presence of ejectives — phonological_profiles","text":"Number consonants presence ejectives","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/phonological_profiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of consonants and presence of ejectives — phonological_profiles","text":"","code":"phonological_profiles"},{"path":"https://docs.ropensci.org/lingtypology/reference/phonological_profiles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number of consonants and presence of ejectives — phonological_profiles","text":"data frame 19 rows 4 variables: language language name consonants number consonants. Based UPSID database. vowels number vowels. Based UPSID database. ejectives presence ejective sounds. tone presence tone. stress presence stress. long_vowels presence long vowels.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/polygon.points_fd.html","id":null,"dir":"Reference","previous_headings":"","what":"Get polygons from fixed distance circles around coordinates — polygon.points_fd","title":"Get polygons from fixed distance circles around coordinates — polygon.points_fd","text":"function based answer: https://www.r-bloggers.com/merging-spatial-buffers--r/","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/polygon.points_fd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get polygons from fixed distance circles around coordinates — polygon.points_fd","text":"","code":"polygon.points_fd(latitude, longitude, width)"},{"path":"https://docs.ropensci.org/lingtypology/reference/polygon.points_fd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get polygons from fixed distance circles around coordinates — polygon.points_fd","text":"latitude numeric vector latitudes longitude numeric vector longitudes width radius creating poligons around points","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/polygon.points_kde.html","id":null,"dir":"Reference","previous_headings":"","what":"Get kernel density estimation poligon from coordinates — polygon.points_kde","title":"Get kernel density estimation poligon from coordinates — polygon.points_kde","text":"function based answer: https://gis.stackexchange.com//203623/","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/polygon.points_kde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get kernel density estimation poligon from coordinates — polygon.points_kde","text":"","code":"polygon.points_kde(latitude, longitude, latitude.width, longitude.width)"},{"path":"https://docs.ropensci.org/lingtypology/reference/polygon.points_kde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get kernel density estimation poligon from coordinates — polygon.points_kde","text":"latitude numeric vector latitudes longitude numeric vector longitudes latitude.width bandwidths latitude values. Defaults normal reference bandwidth (see bandwidth.nrd). longitude.width bandwidths longitude values. Defaults normal reference bandwidth (see bandwidth.nrd).","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/providers.html","id":null,"dir":"Reference","previous_headings":"","what":"Providers — providers","title":"Providers — providers","text":"List providers variations taken leaflet package","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/providers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Providers — providers","text":"","code":"providers"},{"path":"https://docs.ropensci.org/lingtypology/reference/providers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Providers — providers","text":"list characters","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/providers.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Providers — providers","text":"https://github.com/leaflet-extras/leaflet-providers/blob/master/leaflet-providers.js","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/sails.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download SAILS data — sails.feature","title":"Download SAILS data — sails.feature","text":"function downloads data SAILS (https://sails.clld.org/) changes language names names lingtypology database. need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/sails.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download SAILS data — sails.feature","text":"","code":"sails.feature(features, na.rm = TRUE)"},{"path":"https://docs.ropensci.org/lingtypology/reference/sails.feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download SAILS data — sails.feature","text":"features character vector define feature ids SAILS (e. g. \"and1\", \"argex4-1-3\"). na.rm Logical. TRUE function removes languages available lingtypology database. default TRUE.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/sails.feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download SAILS data — sails.feature","text":"","code":"# sails.feature(c(\"and1\", \"and11\"))"},{"path":"https://docs.ropensci.org/lingtypology/reference/soundcomparisons.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download SOUNDCOMPARISONS data — soundcomparisons.feature","title":"Download SOUNDCOMPARISONS data — soundcomparisons.feature","text":"function downloads data SOUNDCOMPARISONS changes language names names lingtypology database. need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/soundcomparisons.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download SOUNDCOMPARISONS data — soundcomparisons.feature","text":"","code":"soundcomparisons.feature(word)"},{"path":"https://docs.ropensci.org/lingtypology/reference/soundcomparisons.feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download SOUNDCOMPARISONS data — soundcomparisons.feature","text":"word character vector define feature ids SOUNDCOMPARISONS (e. g. \"one\", \"sharp_fem\", \"near_neut\", \"on_the_left\", \"    I_will_give\", \"write_ipv_sg\", \"your_pl_pl\").","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/soundcomparisons.feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download SOUNDCOMPARISONS data — soundcomparisons.feature","text":"Anna Smirnova","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/soundcomparisons.feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download SOUNDCOMPARISONS data — soundcomparisons.feature","text":"","code":"# soundcomparisons.feature(c(\"sun\", \"house\"))"},{"path":"https://docs.ropensci.org/lingtypology/reference/soundcomparisons.html","id":null,"dir":"Reference","previous_headings":"","what":"SOUNDCOMPARISONS's Language identifiers — soundcomparisons","title":"SOUNDCOMPARISONS's Language identifiers — soundcomparisons","text":"Language identifiers SOUNDCOMPARISONS. dataset created soundcomparisons.feature function.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/soundcomparisons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SOUNDCOMPARISONS's Language identifiers — soundcomparisons","text":"","code":"soundcomparisons"},{"path":"https://docs.ropensci.org/lingtypology/reference/soundcomparisons.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SOUNDCOMPARISONS's Language identifiers — soundcomparisons","text":"object class data.frame 556 rows 3 columns.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/soundcomparisons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SOUNDCOMPARISONS's Language identifiers — soundcomparisons","text":"#' @format data frame 556 rows 2 variables: LanguageName SOUNDCOMPARISONS language identifier LanduageId Language Id","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/subc.lang.html","id":null,"dir":"Reference","previous_headings":"","what":"Get subclassification by language — subc.lang","title":"Get subclassification by language — subc.lang","text":"Takes vector languoids returns subclassification Newick tree format.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/subc.lang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get subclassification by language — subc.lang","text":"","code":"subc.lang(x)"},{"path":"https://docs.ropensci.org/lingtypology/reference/subc.lang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get subclassification by language — subc.lang","text":"x character vector languoids (can written lower case)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/subc.lang.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get subclassification by language — subc.lang","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/subc.lang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get subclassification by language — subc.lang","text":"","code":"subc.lang('Korean') #>                                                                                                                                                                                             Korean  #> \"((Jollado:1,Kyongsangdo:1)chol1288:1,(Ch'ungch'ongdo:1,Hwanghaedo:1)chun1248:1,(Hamgyongdo:1,P'yong'ando:1)hamg1239:1,(Early_Middle_Korean:1,Late_Middle_Korean:1)midd1372:1,Seoul:1)kore1280:1;\"  subc.lang(c('Korean', 'Lechitic')) #>                                                                                                                                                                                             Korean  #> \"((Jollado:1,Kyongsangdo:1)chol1288:1,(Ch'ungch'ongdo:1,Hwanghaedo:1)chun1248:1,(Hamgyongdo:1,P'yong'ando:1)hamg1239:1,(Early_Middle_Korean:1,Late_Middle_Korean:1)midd1372:1,Seoul:1)kore1280:1;\"  #>                                                                                                                                                                                           Lechitic  #>                                               \"((Kashubian_Proper:1,Slovincian:1)kash1274:1,Polabian:1,((Great_Poland:1,Little_Poland:1,Old_Polish:1)poli1260:1,Silesian:1)poli1262:1)lech1241:1;\""},{"path":"https://docs.ropensci.org/lingtypology/reference/uralex.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download UraLex data — uralex.feature","title":"Download UraLex data — uralex.feature","text":"function downloads data UraLex (https://github.com/lexibank/uralex/) changes language names names lingtypology database. need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/uralex.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download UraLex data — uralex.feature","text":"","code":"uralex.feature(na.rm = TRUE)"},{"path":"https://docs.ropensci.org/lingtypology/reference/uralex.feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download UraLex data — uralex.feature","text":"na.rm Logical. TRUE function removes languages available lingtypology database. default TRUE.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/uralex.feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download UraLex data — uralex.feature","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/uralex.feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download UraLex data — uralex.feature","text":"","code":"# uralex.feature()"},{"path":"https://docs.ropensci.org/lingtypology/reference/uralex.html","id":null,"dir":"Reference","previous_headings":"","what":"UraLex's Language identifiers — uralex","title":"UraLex's Language identifiers — uralex","text":"Language identifiers UraLex (https://github.com/lexibank/uralex/). dataset created uralex.feature function.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/uralex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UraLex's Language identifiers — uralex","text":"","code":"uralex"},{"path":"https://docs.ropensci.org/lingtypology/reference/uralex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UraLex's Language identifiers — uralex","text":"data frame 27 rows 3 variables: uralex.name language name database glottocode Glottocodes language language lingtypology","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/url.lang.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a url-link to glottolog page for a language — url.lang","title":"Make a url-link to glottolog page for a language — url.lang","text":"Takes vector languages returns links glottolog pages.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/url.lang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a url-link to glottolog page for a language — url.lang","text":"","code":"url.lang(x, popup = \"\")"},{"path":"https://docs.ropensci.org/lingtypology/reference/url.lang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a url-link to glottolog page for a language — url.lang","text":"x character vector languages (can written lower case) popup character vector strings appear pop-window function map.feature","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/url.lang.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make a url-link to glottolog page for a language — url.lang","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/url.lang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a url-link to glottolog page for a language — url.lang","text":"","code":"url.lang('Korean') #> [1] \"<a href='https://glottolog.org/resource/languoid/id/kore1280' target='_blank'>Korean<\/a><br>\" url.lang(c('Gangou', 'Hachijo', 'West Circassian', 'Ganai')) #> [1] \"<a href='https://glottolog.org/resource/languoid/id/gang1272' target='_blank'>Gangou<\/a><br>\"          #> [2] \"<a href='https://glottolog.org/resource/languoid/id/hach1239' target='_blank'>Hachijo<\/a><br>\"         #> [3] \"<a href='https://glottolog.org/resource/languoid/id/adyg1241' target='_blank'>West Circassian<\/a><br>\" #> [4] \"<a href='https://glottolog.org/resource/languoid/id/gana1278' target='_blank'>Ganai<\/a><br>\""},{"path":"https://docs.ropensci.org/lingtypology/reference/valpal.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download ValPaL data — valpal.feature","title":"Download ValPaL data — valpal.feature","text":"function downloads data ValPal (https://valpal.info) changes language names names lingtypology database. need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/valpal.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download ValPaL data — valpal.feature","text":"","code":"valpal.feature(na.rm = FALSE)"},{"path":"https://docs.ropensci.org/lingtypology/reference/valpal.feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download ValPaL data — valpal.feature","text":"na.rm Logical. TRUE function removes languages available lingtypology database. default FALSE.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/valpal.feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download ValPaL data — valpal.feature","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/valpal.feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download ValPaL data — valpal.feature","text":"","code":"# valpal.feature()"},{"path":"https://docs.ropensci.org/lingtypology/reference/vanuatu.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Vanuatu Voices data — vanuatu.feature","title":"Download Vanuatu Voices data — vanuatu.feature","text":"function downloads data Vanuatu Voices (https://vanuatuvoices.clld.org/). need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/vanuatu.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Vanuatu Voices data — vanuatu.feature","text":"","code":"vanuatu.feature(features, na.rm = TRUE)"},{"path":"https://docs.ropensci.org/lingtypology/reference/vanuatu.feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Vanuatu Voices data — vanuatu.feature","text":"features vector parameters Concepts (https://vanuatuvoices.clld.org/parameters)) na.rm Logical. TRUE function removes languages available lingtypology database. default TRUE.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/vanuatu.feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download Vanuatu Voices data — vanuatu.feature","text":"Mikhail Leonov","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/wals.feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Download WALS data — wals.feature","title":"Download WALS data — wals.feature","text":"function downloads data WALS (https://wals.info/) changes language names names lingtypology database. need internet connection.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/wals.feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download WALS data — wals.feature","text":"","code":"wals.feature(features, na.rm = TRUE)"},{"path":"https://docs.ropensci.org/lingtypology/reference/wals.feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download WALS data — wals.feature","text":"features character vector define feature ids WALS (e. g. \"1a\", \"21b\"). na.rm Logical. TRUE function removes languages available lingtypology database. default TRUE.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/lingtypology/reference/wals.feature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download WALS data — wals.feature","text":"George Moroz <agricolamz@gmail.com>","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/wals.feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download WALS data — wals.feature","text":"","code":"# wals.feature(c(\"1a\", \"20a\"))"},{"path":"https://docs.ropensci.org/lingtypology/reference/wals.html","id":null,"dir":"Reference","previous_headings":"","what":"WALS's Language identifiers — wals","title":"WALS's Language identifiers — wals","text":"Language identifiers WALS (https://wals.info/). dataset created wals.feature function.","code":""},{"path":"https://docs.ropensci.org/lingtypology/reference/wals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WALS's Language identifiers — wals","text":"","code":"wals"},{"path":"https://docs.ropensci.org/lingtypology/reference/wals.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"WALS's Language identifiers — wals","text":"data frame 2950 rows 2 variables: wals.code WALS language identifier glottocode Glottocode","code":""}]
